# Generated by Django 2.0.5 on 2018-05-27 12:30

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AWSAccessKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('access_key', models.CharField(max_length=100, verbose_name='Access Key')),
                ('secret_key', models.CharField(max_length=100, verbose_name='Secret Key')),
            ],
        ),
        migrations.CreateModel(
            name='AWSCluster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='This value will be in your DNS entries and should conform to valid DNS characters.', max_length=63, unique=True, validators=[django.core.validators.RegexValidator(message='This field may contain only the ASCII letters "a" through "z", the digits "0" through "9",and the minus sign ("-")', regex='^[a-z0-9\\-]+$')], verbose_name='Cluster Name')),
                ('type', models.CharField(choices=[('multi', '[multi] 1 master, 1 infra, 2 app')], default='multi', max_length=10, verbose_name='Cluster Type')),
                ('openshift_version', models.CharField(choices=[('3.9', '3.9')], default='3.9', max_length=5, verbose_name='OpenShift Version')),
                ('ec2_ami_type', models.CharField(choices=[('hourly', 'Hourly'), ('cloud_access', 'Cloud Access')], default='hourly', help_text='If you have Cloud Access enabled, choose <strong>Cloud Access</strong>. Otherwise, choose <strong>Hourly</strong>.', max_length=20, verbose_name='EC2 AMI Type')),
                ('ec2_key_name', models.CharField(max_length=100, verbose_name='EC2 Key Name')),
                ('ec2_private_key', models.TextField(help_text='Enter the private key that matches the EC2 Key Pair selected above.', verbose_name='EC2 Private Key')),
                ('route53_hosted_zone_id', models.CharField(max_length=30, verbose_name='Route53 Hosted Zone')),
                ('openshift_base_domain', models.CharField(help_text='The base domain for your cluster. The value should match or be a su`bdomain of the Route53 Hosted Zone.<br><br>Example: If you set this to <code>example.com</code>, a DNS entry of <code>&lt;cluster_name&gt;.example.com</code> will be created.', max_length=100, verbose_name='OpenShift Base Domain')),
                ('rhsm_username', models.CharField(max_length=100, verbose_name='RHSM Username')),
                ('rhsm_password', models.CharField(max_length=200, verbose_name='RHSM Password')),
                ('rhsm_pool', models.CharField(max_length=100, verbose_name='RHSM Pool ID')),
                ('aws_access_key', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='provision_aws.AWSAccessKey', verbose_name='AWS Access Key')),
            ],
        ),
        migrations.CreateModel(
            name='AWSRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, unique=True, verbose_name='Name')),
            ],
        ),
        migrations.AddField(
            model_name='awscluster',
            name='aws_region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='provision_aws.AWSRegion', verbose_name='AWS Region'),
        ),
    ]
